<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ihelin.book.db.mapper.AccountMapper">
	<resultMap id="BaseResultMap" type="com.ihelin.book.db.entity.Account">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="account_name" property="accountName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="account_type" property="accountType" jdbcType="INTEGER" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="register_date" property="registerDate"
			jdbcType="TIMESTAMP" />
		<result column="img" property="img" jdbcType="VARCHAR" />
		<result column="gender" property="gender" jdbcType="BIT" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, account_name, password, email, account_type, real_name,
		register_date, img, gender,
		mobile, birthday
	</sql>
	<select id="accountList" resultMap="BaseResultMap">
		select * from Account
		<where>
			<if test="accountType!=null">account_type = #{accountType,jdbcType=INTEGER}</if>
		</where>
	</select>
	<select id="listAccountCount" resultType="int" parameterType="java.util.Map">
		select
		count(id)
		from Account
		<where>
			<if test="accountType!=null">account_type = #{accountType,jdbcType=INTEGER}</if>
		</where>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from Account
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByEmail" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from Account
		where email = #{email,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from Account
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.ihelin.book.db.entity.Account"
		useGeneratedKeys="true" keyProperty="id">
		insert into Account (account_name, password, email,
		account_type, real_name, register_date,
		img, gender, mobile, birthday
		)
		values (#{accountName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{accountType,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, #{registerDate,jdbcType=TIMESTAMP},
		#{img,jdbcType=VARCHAR}, #{gender,jdbcType=BIT},
		#{mobile,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.ihelin.book.db.entity.Account"
		useGeneratedKeys="true" keyProperty="id">
		insert into Account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="accountName != null">
				account_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="accountType != null">
				account_type,
			</if>
			<if test="realName != null">
				real_name,
			</if>
			<if test="registerDate != null">
				register_date,
			</if>
			<if test="img != null">
				img,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="accountName != null">
				#{accountName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="accountType != null">
				#{accountType,jdbcType=INTEGER},
			</if>
			<if test="realName != null">
				#{realName,jdbcType=VARCHAR},
			</if>
			<if test="registerDate != null">
				#{registerDate,jdbcType=TIMESTAMP},
			</if>
			<if test="img != null">
				#{img,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=BIT},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ihelin.book.db.entity.Account">
		update Account
		<set>
			<if test="accountName != null">
				account_name = #{accountName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="accountType != null">
				account_type = #{accountType,jdbcType=INTEGER},
			</if>
			<if test="realName != null">
				real_name = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="registerDate != null">
				register_date = #{registerDate,jdbcType=TIMESTAMP},
			</if>
			<if test="img != null">
				img = #{img,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=BIT},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ihelin.book.db.entity.Account">
		update Account
		set account_name = #{accountName,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		account_type = #{accountType,jdbcType=INTEGER},
		real_name = #{realName,jdbcType=VARCHAR},
		register_date = #{registerDate,jdbcType=TIMESTAMP},
		img = #{img,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=BIT},
		mobile = #{mobile,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>