<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ihelin.book.db.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="com.ihelin.book.db.entity.Book" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="isbn" property="isbn" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="creater_id" property="createrId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="press" property="press" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="promotion_price" property="promotionPrice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, book_name, author, img, isbn, create_time, creater_id, type, press, number, price, 
    promotion_price
  </sql>
  <select id="bookList" resultMap="BaseResultMap">
  	select * from Book
  	<where>
		<if test="type!=null">type = #{type,jdbcType=INTEGER}</if>
	</where>
  </select>
  <select id="listBookCount" resultType="int" parameterType="java.util.Map">
		select
		count(id)
		from Book
		<where>
			<if test="type!=null">type = #{type,jdbcType=INTEGER}</if>
		</where>
	</select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ihelin.book.db.entity.Book" useGeneratedKeys="true" keyProperty="id" >
    insert into Book (book_name, author, img, 
      isbn, create_time, creater_id, 
      type, press, number, 
      price, promotion_price)
    values (#{bookName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, 
      #{isbn,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createrId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{press,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{promotionPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.ihelin.book.db.entity.Book" useGeneratedKeys="true" keyProperty="id" >
    insert into Book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="isbn != null" >
        isbn,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createrId != null" >
        creater_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="press != null" >
        press,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="promotionPrice != null" >
        promotion_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createrId != null" >
        #{createrId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="press != null" >
        #{press,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="promotionPrice != null" >
        #{promotionPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ihelin.book.db.entity.Book" >
    update Book
    <set >
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null" >
        isbn = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createrId != null" >
        creater_id = #{createrId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="press != null" >
        press = #{press,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="promotionPrice != null" >
        promotion_price = #{promotionPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ihelin.book.db.entity.Book" >
    update Book
    set book_name = #{bookName,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      isbn = #{isbn,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      creater_id = #{createrId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      press = #{press,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      promotion_price = #{promotionPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>