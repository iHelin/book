<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ihelin.book.db.mapper.OrderPayGroupMapper">
	<resultMap id="BaseResultMap" type="com.ihelin.book.db.entity.OrderPayGroup">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_ids" property="orderIds" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="creator_id" property="creatorId" jdbcType="INTEGER" />
		<result column="total_money" property="totalMoney" jdbcType="DECIMAL" />
		<result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, order_ids, create_time, creator_id, total_money,
		pay_time, status
	</sql>
	<select id="selectByCondition" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select * from OrderPayGroup
		<where>
			<if test="creatorId!=null">creator_id = #{creatorId,jdbcType=INTEGER}</if>
			<if test="status!=null">and status = #{status,jdbcType=INTEGER}</if>
		</where>
		order by pay_time
	</select>
	<select id="listOpgCount" resultType="int" parameterType="java.util.Map">
		select
		count(id)
		from OrderPayGroup
		<where>
			<if test="creatorId!=null">creator_id = #{creatorId,jdbcType=INTEGER}</if>
			<if test="status!=null">and status = #{status,jdbcType=INTEGER}</if>
		</where>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from OrderPayGroup
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		OrderPayGroup
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.ihelin.book.db.entity.OrderPayGroup"
		useGeneratedKeys="true" keyProperty="id">
		insert into OrderPayGroup
		(order_ids, create_time, creator_id,
		total_money, pay_time,status)
		values
		(#{orderIds,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{creatorId,jdbcType=INTEGER},
		#{totalMoney,jdbcType=DECIMAL},
		#{payTime,jdbcType=TIMESTAMP},#{status,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.ihelin.book.db.entity.OrderPayGroup"
		useGeneratedKeys="true" keyProperty="id">
		insert into OrderPayGroup
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderIds != null">
				order_ids,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="creatorId != null">
				creator_id,
			</if>
			<if test="totalMoney != null">
				total_money,
			</if>
			<if test="payTime != null">
				pay_time,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orderIds != null">
				#{orderIds,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creatorId != null">
				#{creatorId,jdbcType=INTEGER},
			</if>
			<if test="totalMoney != null">
				#{totalMoney,jdbcType=DECIMAL},
			</if>
			<if test="payTime != null">
				#{payTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ihelin.book.db.entity.OrderPayGroup">
		update OrderPayGroup
		<set>
			<if test="orderIds != null">
				order_ids = #{orderIds,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="creatorId != null">
				creator_id = #{creatorId,jdbcType=INTEGER},
			</if>
			<if test="totalMoney != null">
				total_money = #{totalMoney,jdbcType=DECIMAL},
			</if>
			<if test="payTime != null">
				pay_time = #{payTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ihelin.book.db.entity.OrderPayGroup">
		update
		OrderPayGroup
		set order_ids = #{orderIds,jdbcType=VARCHAR},
		create_time
		= #{createTime,jdbcType=TIMESTAMP},
		creator_id =
		#{creatorId,jdbcType=INTEGER},
		total_money =
		#{totalMoney,jdbcType=DECIMAL},
		pay_time =
		#{payTime,jdbcType=TIMESTAMP},
		status =
		#{status,jdbcType=INTEGER}
		where
		id = #{id,jdbcType=INTEGER}
	</update>
</mapper>